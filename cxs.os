// cxs (check xml schema) подготовка XML схем для
// использования в 1С:Предприятие

#Использовать cmdline

Функция main()
	Перем ОК, НЕОК, сТекстОшибки;
	Перем мАргументы, ПарсерКС, соПараметрыКС, сСхема, сАлиас;

	// КОНСТАНТЫ
	ОК = 0;
	НЕОК = 1;

	// Разбор аргументов командной строки
	//  -path path - путь к файлу XML схемы
	//  -alias alias - алиас пространства имен w3.org
	мАргументы = АргументыКоманднойСтроки;
	Если мАргументы.Количество() = 0 Тогда
		Сообщить("Параметры:
		| -path <path> - путь к обрабатываемому файлу XML схемы
		| -alias <alias> - алиас пространства имен w3.org"
		, СтатусСообщения.Внимание);
		Возврат НЕОК;
	КонецЕсли;

	ПарсерКС = Новый ПарсерАргументовКоманднойСтроки();
	ПарсерКС.ДобавитьИменованныйПараметр("-path");
	ПарсерКС.ДобавитьИменованныйПараметр("-alias");
	Попытка
		соПараметрыКС = ПарсерКС.Разобрать(мАргументы);
	Исключение
		сТекстОшибки = "Ошибка в параметрах: %1
		|
		|Допустимые параметры:
		| -path <path> - путь к обрабатываемому файлу XML схемы
		| -alias <alias> - алиас пространства имен w3.org";
		сТекстОшибки = СтрШаблон(сТекстОшибки, ОписаниеОшибки());
		Сообщить(сТекстОшибки, СтатусСообщения.Внимание);
		Возврат НЕОК;
	КонецПопытки;

	// Прочитать файл со схемой XML в переменную
	сСхема = "";
	Если НЕ ПрочитатьФайлСхемы(соПараметрыКС["-path"], сСхема) Тогда
		Возврат НЕОК;
	КонецЕсли;

	// Проверить существование алиаса пространства имен w3.org
	сАлиас = соПараметрыКС["-alias"];
	Если НЕ АлиасСуществует(сСхема, сАлиас) Тогда
		сТекстОшибки = "Алиас %1 не используется в XML схеме";
		сТекстОшибки = СтрШаблон(сТекстОшибки, сАлиас);
		Сообщить(сТекстОшибки, СтатусСообщения.Важное);
		Возврат НЕОК;
	КонецЕсли;
	
	// Заменить теги < и </ на <alias: </alias:
	Если НЕ ВставитьАлиас(сСхема, сАлиас) Тогда
		Возврат НЕОК;
	КонецЕсли;

	// Проверить XML схему по словарю
	Если НЕ ПроверитьСхемуПоСловарю(сСхема) Тогда
		Возврат НЕОК;
	КонецЕсли;

	// Записать сСхема в файл со схемой
	Если НЕ ЗаписатьФайлСхемы(соПараметрыКС["-path"], сСхема) Тогда
		Возврат НЕОК;
	КонецЕсли;

	Возврат ОК;
КонецФункции

Функция ПрочитатьФайлСхемы(сПутьКФайлу, сСхема)
	Перем бВыполненоБезОшибок, сТекстОшибки;
	Перем оФайл, оТкест;

	бВыполненоБезОшибок = Ложь;
	сСхема = "";

	Если ПустаяСтрока(сПутьКФайлу) Тогда
		Сообщить("Не указан путь к файлу XML схемы для чтения", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	оФайл = Новый Файл(сПутьКФайлу);
	Если НЕ оФайл.Существует() Тогда
		сТекстОшибки = "Не найден файл по указанному пути %1";
		сТекстОшибки = СтрШаблон(сТекстОшибки, сПутьКФайлу);
		Сообщить(сТекстОшибки, СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	оТкест = Новый ЧтениеТекста(сПутьКФайлу, КодировкаТекста.UTF8);
	Попытка
		сСхема = оТкест.Прочитать();
	Исключение
		сТекстОшибки = "Ошибка при чтении файла XML схемы. %1";
		сТекстОшибки = СтрШаблон(сТекстОшибки, ОписаниеОшибки());
		Сообщить(сТекстОшибки, СтатусСообщения.Важное);
		оТкест.Закрыть();
		Возврат бВыполненоБезОшибок;
	КонецПопытки;
	
	оТкест.Закрыть();

	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция ЗаписатьФайлСхемы(сПутьКФайлу, Знач сСхема)
	Перем бВыполненоБезОшибок, сТекстОшибки;
	Перем оТкест, оФайл, сПуть, сИмя, сРасширение, сПутьКФайлуНовый;
	Перем ПРЕФ_НОВЫЙ;

	// КОНСТАНТЫ
	ПРЕФ_НОВЫЙ = "_modify";

	бВыполненоБезОшибок = Ложь;

	Если ПустаяСтрока(сПутьКФайлу) Тогда
		Сообщить("Не указан путь к файлу XML схемы для записи", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	Если ПустаяСтрока(сСхема) Тогда
		Сообщить("Нет данных для записи в файл XML схемы", СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	оФайл = Новый Файл(сПутьКФайлу);
	Если НЕ оФайл.Существует() Тогда
		сТекстОшибки = "Невозможна запись файла по указанному пути %1";
		сТекстОшибки = СтрШаблон(сТекстОшибки, сПутьКФайлу);
		Сообщить(сТекстОшибки, СтатусСообщения.Важное);
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	сПуть = оФайл.Путь;
	сИмя = оФайл.ИмяБезРасширения + ПРЕФ_НОВЫЙ;
	сРасширение = оФайл.Расширение;
	сПутьКФайлуНовый = ОбъединитьПути(сПуть, сИмя + сРасширение);

	оТкест = Новый ЗаписьТекста(сПутьКФайлуНовый, КодировкаТекста.UTF8);
	Попытка
		оТкест.Записать(сСхема);
	Исключение
		сТекстОшибки = "Ошибка при записи файла XML схемы. %1";
		сТекстОшибки = СтрШаблон(сТекстОшибки, ОписаниеОшибки());
		Сообщить(сТекстОшибки, СтатусСообщения.Важное);
		оТкест.Закрыть();
		Возврат бВыполненоБезОшибок;
	КонецПопытки;

	оТкест.Закрыть();

	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция АлиасСуществует(сСхема, сАлиас)
	Перем бСуществует;

	бСуществует = Ложь;

	Если ПустаяСтрока(сСхема) Тогда
		Возврат бСуществует;
	КонецЕсли;

	Если СтрНайти(сСхема, "xmlns:" + сАлиас) = 0 Тогда
		Возврат бСуществует;
	КонецЕсли;

	бСуществует = Истина;
	Возврат бСуществует;
КонецФункции

Функция ВставитьАлиас(сСхема, сАлиас)
	Перем бВыполненоБезОшибок;
	Перем оРегэкс, оКоллекцияСовпадений, оСовпадение;

	бВыполненоБезОшибок = Ложь;

	Если ПустаяСтрока(сСхема) Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	Если ПустаяСтрока(сАлиас) Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;
	
	// Поиск "<х"
	оРегэкс = Новый РегулярноеВыражение("<(\w)");
	сСхема = оРегэкс.Заменить(сСхема, "<" + сАлиас + ":$1");
	
	// Поиск "</"
	оРегэкс = Новый РегулярноеВыражение("<\/");
	сСхема = оРегэкс.Заменить(сСхема, "</" + сАлиас + ":");

	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

Функция СловарьПроверкиСхемы()
	Перем мДанные;

	мДанные = Новый Массив();
	мДанные.Добавить("anyAttribute");
	мДанные.Добавить("attributeGroup");
	мДанные.Добавить("complexContent");
	мДанные.Добавить("complexType");
	мДанные.Добавить("simpleContent");
	мДанные.Добавить("simpleType");
	мДанные.Добавить("fractionDigits");
	мДанные.Добавить("maxExclusive");
	мДанные.Добавить("maxInclusive");
	мДанные.Добавить("maxLength");
	мДанные.Добавить("minExclusive");
	мДанные.Добавить("minInclusive");
	мДанные.Добавить("minLength");
	мДанные.Добавить("totalDigits");
	мДанные.Добавить("whiteSpace");
	мДанные.Добавить("substitutionGroup");
	мДанные.Добавить("maxOccurs");
	мДанные.Добавить("minOccurs");
	мДанные.Добавить("attributeFormDefault");
	мДанные.Добавить("elementFormDefault");
	мДанные.Добавить("blockDefault");
	мДанные.Добавить("finalDefault");
	мДанные.Добавить("targetNamespace");

	Возврат мДанные;
КонецФункции

Функция ПроверитьСхемуПоСловарю(сСхема)
	Перем бВыполненоБезОшибок, элементСловаря, оРегэкс;

	бВыполненоБезОшибок = Ложь;

	Если ПустаяСтрока(сСхема) Тогда
		Возврат бВыполненоБезОшибок;
	КонецЕсли;

	Для каждого элементСловаря Из СловарьПроверкиСхемы() Цикл
		оРегэкс = Новый РегулярноеВыражение(элементСловаря);
		оРегэкс.ИгнорироватьРегистр = Истина;
		сСхема = оРегэкс.Заменить(сСхема, элементСловаря);
	КонецЦикла;

	бВыполненоБезОшибок = Истина;
	Возврат бВыполненоБезОшибок;
КонецФункции

main();